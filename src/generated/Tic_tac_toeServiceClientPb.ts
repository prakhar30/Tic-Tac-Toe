/**
 * @fileoverview gRPC-Web generated client stub for tic_tac_toe
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: tic_tac_toe.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as rpc_create_user_pb from './rpc_create_user_pb'; // proto import: "rpc_create_user.proto"
import * as rpc_login_user_pb from './rpc_login_user_pb'; // proto import: "rpc_login_user.proto"


export class TicTacToeClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateUser = new grpcWeb.MethodDescriptor(
    '/tic_tac_toe.TicTacToe/CreateUser',
    grpcWeb.MethodType.UNARY,
    rpc_create_user_pb.CreateUserRequest,
    rpc_create_user_pb.CreateUserResponse,
    (request: rpc_create_user_pb.CreateUserRequest) => {
      return request.serializeBinary();
    },
    rpc_create_user_pb.CreateUserResponse.deserializeBinary
  );

  createUser(
    request: rpc_create_user_pb.CreateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<rpc_create_user_pb.CreateUserResponse>;

  createUser(
    request: rpc_create_user_pb.CreateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: rpc_create_user_pb.CreateUserResponse) => void): grpcWeb.ClientReadableStream<rpc_create_user_pb.CreateUserResponse>;

  createUser(
    request: rpc_create_user_pb.CreateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: rpc_create_user_pb.CreateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/tic_tac_toe.TicTacToe/CreateUser',
        request,
        metadata || {},
        this.methodDescriptorCreateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/tic_tac_toe.TicTacToe/CreateUser',
    request,
    metadata || {},
    this.methodDescriptorCreateUser);
  }

  methodDescriptorLoginUser = new grpcWeb.MethodDescriptor(
    '/tic_tac_toe.TicTacToe/LoginUser',
    grpcWeb.MethodType.UNARY,
    rpc_login_user_pb.LoginUserRequest,
    rpc_login_user_pb.LoginUserResponse,
    (request: rpc_login_user_pb.LoginUserRequest) => {
      return request.serializeBinary();
    },
    rpc_login_user_pb.LoginUserResponse.deserializeBinary
  );

  loginUser(
    request: rpc_login_user_pb.LoginUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<rpc_login_user_pb.LoginUserResponse>;

  loginUser(
    request: rpc_login_user_pb.LoginUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: rpc_login_user_pb.LoginUserResponse) => void): grpcWeb.ClientReadableStream<rpc_login_user_pb.LoginUserResponse>;

  loginUser(
    request: rpc_login_user_pb.LoginUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: rpc_login_user_pb.LoginUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/tic_tac_toe.TicTacToe/LoginUser',
        request,
        metadata || {},
        this.methodDescriptorLoginUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/tic_tac_toe.TicTacToe/LoginUser',
    request,
    metadata || {},
    this.methodDescriptorLoginUser);
  }

}

